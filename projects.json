{
  "projects": [
    {
      "title": {
        "tr": "Enerji Üretim Verimliliği Analitik Platformu",
        "en": "Energy Production Efficiency Analytics Platform"
      },
      "duration": "12/09/2025 - 19/09/2025",
      "problem": "Map { \"tr\": \"Enerji üretim tesisleri, verimlilik kayıplarını zamanında tespit edememekten dolayı kapasitelerinin altında çalışıyor. Excel tabanlı manuel raporlama sistemleri, trendleri ve anomalileri görmeyi zorlaştırıyor. Operatörler, hızlı karar almak için görsel ve anlaşılır dashboardlara ihtiyaç duyuyor.\", \"en\": \"Energy production facilities operate below their capacity because they fail to detect efficiency losses in time. Excel-based manual reporting systems make it difficult to identify trends and anomalies. Operators need visual and easy-to-understand dashboards to make quick decisions.\n\" }",
      "solution": "Map { \"tr\": \"90 günlük sentetik enerji üretim verisi üzerinde çalışan bir analiz sistemi geliştirdim. Python ile verimlilik hesaplamaları yapan, %80 eşik değerinin altındaki günleri tespit eden ve istatistiksel anomalileri (±2σ metodu) belirleyen bir analiz motoru oluşturdum. Power BI için hazır veri seti ve detaylı dashboard tasarım kılavuzu hazırladım.\", \"en\": \"I developed an analysis system that works on 90 days of synthetic energy production data.\nI built an analysis engine in Python that calculates efficiency, identifies days falling below the 80% threshold, and detects statistical anomalies using the ±2σ method.\nI also prepared a ready-to-use dataset for Power BI and a detailed dashboard design guide.\n.\" }",
      "outcome": "Map { \"tr\": \"Sistem, test verisinde %13.3 oranında düşük verimlilik günlerini ve %10 oranında anomali tespit etti. Analiz süreci <1 saniyede tamamlanıyor. Power BI'da uygulandığında, operatörlerin verimlilik trendlerini takip etmesini ve kritik durumları hızlıca görmesini sağlayacak bir altyapı oluşturuldu.\", \"en\": \"The system detected 13.3% low-efficiency days and 10% anomalies in the test data.\nThe analysis process is completed in under one second.\nWhen implemented in Power BI, it provides an infrastructure that allows operators to track efficiency trends and quickly identify critical situations.\n\" }",
      "technologies": [
        "Python",
        "Power BI",
        "Pandas",
        "NumPy",
        "DAX",
        "Statistical Analysis",
        "Time Series"
      ],
      "link": "https://github.com/samet0demir/enerji-vizyon"
    },
    {
      "title": "Machine Learning-Based Earthquake Loss Estimation for Avcılar District",
      "duration": "08/03/2025 – 21/06/2025",
      "problem": "Ahead of the anticipated major Marmara earthquake, existing risk maps are often too broad, remaining at the city or district level. This makes it difficult for local response teams to allocate resources to the most critical neighborhoods. A data-driven, quantitative prioritization system at the neighborhood level is missing.",
      "solution": "I developed a machine learning model using Python and Scikit-learn on earthquake scenario data from the Istanbul Metropolitan Municipality (IMM), which included soil conditions, building inventory, and population data. To overcome the challenges of a small dataset (n=10 neighborhoods), I applied Leave-One-Out Cross-Validation (LOOCV) and regularized regression methods (Ridge, Lasso). One of the most critical steps was identifying and addressing the 'target leakage' problem, which significantly improved the model's interpretability and reliability.",
      "outcome": "The model generated casualty estimates for Avcılar's 10 neighborhoods, providing a clear ranking of the highest-risk areas (Cihangir, Denizköşkler, Ambarlı). The leakage-free analysis revealed that the true key factors influencing casualties are Peak Ground Velocity (PGV), soil conditions (Vs30), and the number of heavily damaged buildings. These outputs provide a science-based decision support tool for emergency teams to use in their search-and-rescue and resource allocation planning.",
      "technologies": [
        "Python",
        "Pandas",
        "Regression Analysis",
        "Scikit-learn",
        "Decision Support Systems"
      ],
      "link": "-"
    },
    {
      "title": "Ad Click-Through Rate (CTR) Prediction",
      "duration": "27/11/2024 – 03/12/2024",
      "problem": "A digital marketing agency needed to optimize its advertising budget by identifying which users are most likely to click on an ad. Random ad placements were leading to low engagement and wasted ad spend.",
      "solution": "Built a machine learning model (Logistic Regression) to predict the probability of a user clicking on an ad based on user demographic data, browsing history, and ad characteristics. Performed extensive feature engineering to create meaningful predictors.",
      "outcome": "The model achieved a high accuracy, allowing the agency to target users with a greater likelihood to click, leading to a 15% increase in CTR and a more efficient allocation of the ad budget.",
      "technologies": [
        "Python",
        "Scikit-learn",
        "Pandas",
        "Matplotlib",
        "Jupyter Notebook"
      ],
      "link": "https://github.com/samet0demir/ad-click-prediction"
    },
    {
      "title": "Comparative Analysis of Taxi Companies",
      "duration": "23/11/2024 – 25/11/2024",
      "problem": "A city transport authority needed to understand the operational differences and market share between two major taxi companies to inform new regulations.",
      "solution": "Conducted a comprehensive data analysis project. Cleaned and processed trip data, performed statistical tests to compare ride durations and distances, and visualized the results to highlight key differences in their operational patterns and neighborhood coverage.",
      "outcome": "The final report and visualizations clearly demonstrated that Company A dominated the city center while Company B served suburban areas more effectively. This insight directly influenced the transport authority's strategy for issuing new taxi licenses.",
      "technologies": [
        "Python",
        "Pandas",
        "SciPy",
        "Matplotlib",
        "Seaborn"
      ],
      "link": "https://github.com/samet0demir/Company_Analysis"
    }
  ]
}
